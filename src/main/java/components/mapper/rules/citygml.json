{
    "org.citygml4j.model.citygml.building.InteriorWallSurface": {
        "getGenericApplicationPropertyOfInteriorWallSurface": "java.util.List",
        "isSetGenericApplicationPropertyOfInteriorWallSurface": "boolean"
    },
    "org.citygml4j.model.citygml.appearance.TexCoordGen": {
        "getWorldToTexture": "org.citygml4j.model.citygml.appearance.WorldToTexture",
        "isSetGenericApplicationPropertyOfTexCoordGen": "boolean",
        "getGenericApplicationPropertyOfTexCoordGen": "java.util.List",
        "isSetWorldToTexture": "boolean"
    },
    "org.citygml4j.model.citygml.bridge.GroundSurface": {
        "isSetGenericApplicationPropertyOfGroundSurface": "boolean",
        "getGenericApplicationPropertyOfGroundSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.building.ClosureSurface": {
        "isSetGenericApplicationPropertyOfClosureSurface": "boolean",
        "getGenericApplicationPropertyOfClosureSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.tunnel.InteriorHollowSpaceProperty": {
        "getHollowSpace": "org.citygml4j.model.citygml.tunnel.HollowSpace",
        "isSetHollowSpace": "boolean"
    },
    "org.citygml4j.model.citygml.building.CeilingSurface": {
        "getGenericApplicationPropertyOfCeilingSurface": "java.util.List",
        "isSetGenericApplicationPropertyOfCeilingSurface": "boolean"
    },
    "org.citygml4j.model.citygml.transportation.Road": {
        "getGenericApplicationPropertyOfRoad": "java.util.List",
        "isSetGenericApplicationPropertyOfRoad": "boolean"
    },
    "org.citygml4j.model.citygml.core.AbstractSite": {
        "getGenericApplicationPropertyOfSite": "java.util.List",
        "isSetGenericApplicationPropertyOfSite": "boolean"
    },
    "org.citygml4j.model.citygml.texturedsurface._TextureType": {"getValue": "java.lang.String"},
    "org.citygml4j.model.citygml.appearance.TexCoordList": {
        "isSetTextureCoordinates": "boolean",
        "getTextureCoordinates": "java.util.List",
        "getGenericApplicationPropertyOfTexCoordList": "java.util.List",
        "isSetGenericApplicationPropertyOfTexCoordList": "boolean"
    },
    "org.citygml4j.model.citygml.building.OuterCeilingSurface": {
        "isSetGenericApplicationPropertyOfOuterCeilingSurface": "boolean",
        "getGenericApplicationPropertyOfOuterCeilingSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.relief.RasterRelief": {
        "getGenericApplicationPropertyOfRasterRelief": "java.util.List",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetGrid": "boolean",
        "getGrid": "org.citygml4j.model.citygml.relief.GridProperty",
        "isSetGenericApplicationPropertyOfRasterRelief": "boolean"
    },
    "org.citygml4j.model.citygml.vegetation.SolitaryVegetationObject": {
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetFunction": "boolean",
        "isSetLod4Geometry": "boolean",
        "isSetLod3Geometry": "boolean",
        "isSetLod1ImplicitRepresentation": "boolean",
        "getLod1ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "getSpecies": "org.citygml4j.model.gml.basicTypes.Code",
        "getHeight": "org.citygml4j.model.gml.measures.Length",
        "isSetLod1Geometry": "boolean",
        "isSetTrunkDiameter": "boolean",
        "isSetLod2Geometry": "boolean",
        "getTrunkDiameter": "org.citygml4j.model.gml.measures.Length",
        "getLod3Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "getLod4Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetLod2ImplicitRepresentation": "boolean",
        "isSetHeight": "boolean",
        "getLod2ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getCrownDiameter": "org.citygml4j.model.gml.measures.Length",
        "getLod1Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetCrownDiameter": "boolean",
        "isSetGenericApplicationPropertyOfSolitaryVegetationObject": "boolean",
        "isSetLod3ImplicitRepresentation": "boolean",
        "getFunction": "java.util.List",
        "getLod2Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetClazz": "boolean",
        "getUsage": "java.util.List",
        "getLod3ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetSpecies": "boolean",
        "isSetLod4ImplicitRepresentation": "boolean",
        "getGenericApplicationPropertyOfSolitaryVegetationObject": "java.util.List"
    },
    "org.citygml4j.model.citygml.bridge.RoofSurface": {
        "isSetGenericApplicationPropertyOfRoofSurface": "boolean",
        "getGenericApplicationPropertyOfRoofSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.generics.AbstractGenericAttribute": {
        "getName": "java.lang.String",
        "isSetName": "boolean"
    },
    "org.citygml4j.model.citygml.core.TransformationMatrix4x4": {
        "getMatrix": "org.citygml4j.geometry.Matrix",
        "isSetMatrix": "boolean"
    },
    "org.citygml4j.model.citygml.vegetation.PlantCover": {
        "isSetLod4MultiSolid": "boolean",
        "isSetFunction": "boolean",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetGenericApplicationPropertyOfPlantCover": "boolean",
        "getLod3MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getLod2MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getLod3MultiSolid": "org.citygml4j.model.gml.geometry.aggregates.MultiSolidProperty",
        "isSetLod2MultiSolid": "boolean",
        "getLod1MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getLod1MultiSolid": "org.citygml4j.model.gml.geometry.aggregates.MultiSolidProperty",
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetAverageHeight": "boolean",
        "getFunction": "java.util.List",
        "getLod4MultiSolid": "org.citygml4j.model.gml.geometry.aggregates.MultiSolidProperty",
        "isSetLod3MultiSolid": "boolean",
        "isSetClazz": "boolean",
        "isSetLod4MultiSurface": "boolean",
        "isSetLod3MultiSurface": "boolean",
        "getUsage": "java.util.List",
        "isSetLod1MultiSolid": "boolean",
        "isSetLod1MultiSurface": "boolean",
        "isSetLod2MultiSurface": "boolean",
        "getLod2MultiSolid": "org.citygml4j.model.gml.geometry.aggregates.MultiSolidProperty",
        "getAverageHeight": "org.citygml4j.model.gml.measures.Length",
        "getGenericApplicationPropertyOfPlantCover": "java.util.List"
    },
    "org.citygml4j.model.citygml.transportation.TrafficAreaProperty": {
        "getTrafficArea": "org.citygml4j.model.citygml.transportation.TrafficArea",
        "isSetTrafficArea": "boolean"
    },
    "org.citygml4j.model.citygml.texturedsurface._Material": {
        "getEmissiveColor": "org.citygml4j.model.citygml.texturedsurface._Color",
        "isSetTransparency": "boolean",
        "isSetEmissiveColor": "boolean",
        "getDiffuseColor": "org.citygml4j.model.citygml.texturedsurface._Color",
        "isSetSpecularColor": "boolean",
        "getSpecularColor": "org.citygml4j.model.citygml.texturedsurface._Color",
        "getTransparency": "java.lang.Double",
        "getShininess": "java.lang.Double",
        "isSetAmbientIntensity": "boolean",
        "getAmbientIntensity": "java.lang.Double",
        "isSetDiffuseColor": "boolean",
        "isSetShininess": "boolean"
    },
    "org.citygml4j.model.citygml.bridge.BridgeFurniture": {
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetGenericApplicationPropertyOfBridgeFurniture": "boolean",
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "getGenericApplicationPropertyOfBridgeFurniture": "java.util.List",
        "isSetLod4Geometry": "boolean",
        "isSetClazz": "boolean",
        "getUsage": "java.util.List",
        "isSetLod4ImplicitRepresentation": "boolean",
        "getLod4Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty"
    },
    "org.citygml4j.model.citygml.transportation.TrafficArea": {
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetClazz": "boolean",
        "isSetLod4MultiSurface": "boolean",
        "getGenericApplicationPropertyOfTrafficArea": "java.util.List",
        "isSetLod3MultiSurface": "boolean",
        "isSetSurfaceMaterial": "boolean",
        "getLod3MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getUsage": "java.util.List",
        "isSetLod2MultiSurface": "boolean",
        "getSurfaceMaterial": "org.citygml4j.model.gml.basicTypes.Code",
        "getLod2MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetGenericApplicationPropertyOfTrafficArea": "boolean"
    },
    "org.citygml4j.model.citygml.tunnel.TunnelPartProperty": {
        "isSetTunnelPart": "boolean",
        "getTunnelPart": "org.citygml4j.model.citygml.tunnel.TunnelPart"
    },
    "org.citygml4j.model.citygml.relief.AbstractReliefComponent": {
        "getExtent": "org.citygml4j.model.gml.geometry.primitives.PolygonProperty",
        "getLod": "int",
        "isSetGenericApplicationPropertyOfReliefComponent": "boolean",
        "isSetExtent": "boolean",
        "isSetLod": "boolean",
        "getGenericApplicationPropertyOfReliefComponent": "java.util.List"
    },
    "org.citygml4j.model.citygml.relief.ReliefFeature": {
        "getLod": "int",
        "isSetLod": "boolean",
        "isSetGenericApplicationPropertyOfReliefFeature": "boolean",
        "isSetReliefComponent": "boolean",
        "getReliefComponent": "java.util.List",
        "getGenericApplicationPropertyOfReliefFeature": "java.util.List"
    },
    "org.citygml4j.model.citygml.relief.ReliefComponentProperty": {
        "isSetReliefComponent": "boolean",
        "getReliefComponent": "org.citygml4j.model.citygml.relief.AbstractReliefComponent"
    },
    "org.citygml4j.model.citygml.tunnel.GroundSurface": {
        "isSetGenericApplicationPropertyOfGroundSurface": "boolean",
        "getGenericApplicationPropertyOfGroundSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.building.AbstractOpening": {
        "getLod3ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetGenericApplicationPropertyOfOpening": "boolean",
        "isSetLod3ImplicitRepresentation": "boolean",
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetLod4ImplicitRepresentation": "boolean",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetLod4MultiSurface": "boolean",
        "getGenericApplicationPropertyOfOpening": "java.util.List",
        "isSetLod3MultiSurface": "boolean",
        "getLod3MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty"
    },
    "org.citygml4j.model.citygml.bridge.BridgePart": {
        "getGenericApplicationPropertyOfBridgePart": "java.util.List",
        "isSetGenericApplicationPropertyOfBridgePart": "boolean"
    },
    "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty": {
        "getImplicitGeometry": "org.citygml4j.model.citygml.core.ImplicitGeometry",
        "isSetImplicitGeometry": "boolean"
    },
    "org.citygml4j.model.citygml.bridge.BridgePartProperty": {
        "getBridgePart": "org.citygml4j.model.citygml.bridge.BridgePart",
        "isSetBridgePart": "boolean"
    },
    "org.citygml4j.model.citygml.tunnel.AbstractOpening": {
        "getLod3ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetGenericApplicationPropertyOfOpening": "boolean",
        "isSetLod3ImplicitRepresentation": "boolean",
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetLod4ImplicitRepresentation": "boolean",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetLod4MultiSurface": "boolean",
        "getGenericApplicationPropertyOfOpening": "java.util.List",
        "isSetLod3MultiSurface": "boolean",
        "getLod3MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty"
    },
    "org.citygml4j.model.citygml.relief.TinProperty": {
        "getTriangulatedSurface": "org.citygml4j.model.gml.geometry.primitives.TriangulatedSurface",
        "isSetTriangulatedSurface": "boolean"
    },
    "org.citygml4j.model.citygml.building.BuildingFurniture": {
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "isSetLod4Geometry": "boolean",
        "isSetClazz": "boolean",
        "isSetGenericApplicationPropertyOfBuildingFurniture": "boolean",
        "getUsage": "java.util.List",
        "isSetLod4ImplicitRepresentation": "boolean",
        "getLod4Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "getGenericApplicationPropertyOfBuildingFurniture": "java.util.List"
    },
    "org.citygml4j.model.citygml.generics.IntAttribute": {
        "getValue": "java.lang.Integer",
        "isSetValue": "boolean"
    },
    "org.citygml4j.model.citygml.tunnel.OuterFloorSurface": {
        "isSetGenericApplicationPropertyOfOuterFloorSurface": "boolean",
        "getGenericApplicationPropertyOfOuterFloorSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.bridge.BridgeConstructionElementProperty": {
        "isSetBridgeConstructionElement": "boolean",
        "getBridgeConstructionElement": "org.citygml4j.model.citygml.bridge.BridgeConstructionElement"
    },
    "org.citygml4j.model.citygml.bridge.BridgeInstallationProperty": {
        "getBridgeInstallation": "org.citygml4j.model.citygml.bridge.BridgeInstallation",
        "isSetBridgeInstallation": "boolean"
    },
    "org.citygml4j.model.citygml.tunnel.WallSurface": {
        "isSetGenericApplicationPropertyOfWallSurface": "boolean",
        "getGenericApplicationPropertyOfWallSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.building.WallSurface": {
        "isSetGenericApplicationPropertyOfWallSurface": "boolean",
        "getGenericApplicationPropertyOfWallSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.tunnel.Door": {
        "isSetGenericApplicationPropertyOfDoor": "boolean",
        "getGenericApplicationPropertyOfDoor": "java.util.List"
    },
    "org.citygml4j.model.citygml.generics.GenericCityObject": {
        "getLod0ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetLod2TerrainIntersection": "boolean",
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetFunction": "boolean",
        "isSetLod1TerrainIntersection": "boolean",
        "isSetLod4TerrainIntersection": "boolean",
        "isSetLod3TerrainIntersection": "boolean",
        "isSetLod4Geometry": "boolean",
        "isSetLod3Geometry": "boolean",
        "isSetLod1ImplicitRepresentation": "boolean",
        "getLod1ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetLod1Geometry": "boolean",
        "isSetLod2Geometry": "boolean",
        "getLod3Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetLod0TerrainIntersection": "boolean",
        "isSetLod0Geometry": "boolean",
        "getLod4Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetLod2ImplicitRepresentation": "boolean",
        "getLod2ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLod1Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "getLod0Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetLod3ImplicitRepresentation": "boolean",
        "getFunction": "java.util.List",
        "getLod2Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetClazz": "boolean",
        "getUsage": "java.util.List",
        "getLod3ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "getLod3TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod2TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "isSetLod4ImplicitRepresentation": "boolean",
        "getLod0TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod1TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod4TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "isSetLod0ImplicitRepresentation": "boolean"
    },
    "org.citygml4j.model.citygml.texturedsurface._AppearanceProperty": {
        "isSetAppearance": "boolean",
        "getAppearance": "org.citygml4j.model.citygml.texturedsurface._AbstractAppearance",
        "isSetOrientation": "boolean",
        "getOrientation": "org.citygml4j.model.gml.geometry.primitives.Sign"
    },
    "org.citygml4j.model.citygml.transportation.AbstractTransportationObject": {
        "getGenericApplicationPropertyOfTransportationObject": "java.util.List",
        "isSetGenericApplicationPropertyOfTransportationObject": "boolean"
    },
    "org.citygml4j.model.citygml.waterbody.AbstractWaterBoundarySurface": {
        "getLod4Surface": "org.citygml4j.model.gml.geometry.primitives.SurfaceProperty",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "getLod2Surface": "org.citygml4j.model.gml.geometry.primitives.SurfaceProperty",
        "getGenericApplicationPropertyOfWaterBoundarySurface": "java.util.List",
        "getLod3Surface": "org.citygml4j.model.gml.geometry.primitives.SurfaceProperty",
        "isSetLod2Surface": "boolean",
        "isSetLod3Surface": "boolean",
        "isSetLod4Surface": "boolean",
        "isSetGenericApplicationPropertyOfWaterBoundarySurface": "boolean"
    },
    "org.citygml4j.model.citygml.tunnel.TunnelInstallationProperty": {
        "getTunnelInstallation": "org.citygml4j.model.citygml.tunnel.TunnelInstallation",
        "isSetTunnelInstallation": "boolean"
    },
    "org.citygml4j.model.citygml.bridge.Bridge": {
        "isSetGenericApplicationPropertyOfBridge": "boolean",
        "getGenericApplicationPropertyOfBridge": "java.util.List"
    },
    "org.citygml4j.model.citygml.bridge.OuterCeilingSurface": {
        "isSetGenericApplicationPropertyOfOuterCeilingSurface": "boolean",
        "getGenericApplicationPropertyOfOuterCeilingSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.building.Window": {
        "isSetGenericApplicationPropertyOfWindow": "boolean",
        "getGenericApplicationPropertyOfWindow": "java.util.List"
    },
    "org.citygml4j.model.citygml.bridge.AbstractBridge": {
        "isSetIsMovable": "boolean",
        "isSetOuterBridgeInstallation": "boolean",
        "getLod1Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty",
        "isSetFunction": "boolean",
        "isSetLod1TerrainIntersection": "boolean",
        "isSetLod3TerrainIntersection": "boolean",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getLod4MultiCurve": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getBoundedBySurface": "java.util.List",
        "getLod3MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetYearOfDemolition": "boolean",
        "isSetInteriorBridgeRoom": "boolean",
        "getLod2Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty",
        "getOuterBridgeInstallation": "java.util.List",
        "getYearOfConstruction": "java.time.LocalDate",
        "getYearOfDemolition": "java.time.LocalDate",
        "getLod2MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getLod1MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetLod4MultiCurve": "boolean",
        "isSetUsage": "boolean",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "getLod3Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty",
        "isSetGenericApplicationPropertyOfAbstractBridge": "boolean",
        "isSetLod4MultiSurface": "boolean",
        "isSetLod3MultiSurface": "boolean",
        "isSetOuterBridgeConstructionElement": "boolean",
        "getInteriorBridgeRoom": "java.util.List",
        "getUsage": "java.util.List",
        "isSetLod1MultiSurface": "boolean",
        "isSetLod1Solid": "boolean",
        "isSetLod2MultiSurface": "boolean",
        "isSetLod4Solid": "boolean",
        "isSetLod3MultiCurve": "boolean",
        "getInteriorBridgeInstallation": "java.util.List",
        "isSetAddress": "boolean",
        "isSetLod2TerrainIntersection": "boolean",
        "isSetLod4TerrainIntersection": "boolean",
        "isSetInteriorBridgeInstallation": "boolean",
        "isSetLod2Solid": "boolean",
        "getIsMovable": "java.lang.Boolean",
        "getLod2MultiCurve": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getAddress": "java.util.List",
        "isSetLod3Solid": "boolean",
        "getConsistsOfBridgePart": "java.util.List",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "isSetYearOfConstruction": "boolean",
        "getGenericApplicationPropertyOfAbstractBridge": "java.util.List",
        "getFunction": "java.util.List",
        "isSetClazz": "boolean",
        "getLod3MultiCurve": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "isSetLod2MultiCurve": "boolean",
        "isSetBoundedBySurface": "boolean",
        "getLod3TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod2TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "isSetConsistsOfBridgePart": "boolean",
        "getLod1TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod4TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod4Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty",
        "getOuterBridgeConstructionElement": "java.util.List"
    },
    "org.citygml4j.model.citygml.cityobjectgroup.CityObjectGroupParent": {
        "getCityObject": "org.citygml4j.model.citygml.core.AbstractCityObject",
        "isSetCityObject": "boolean"
    },
    "org.citygml4j.model.citygml.waterbody.BoundedByWaterSurfaceProperty": {
        "isSetWaterBoundarySurface": "boolean",
        "getWaterBoundarySurface": "org.citygml4j.model.citygml.waterbody.AbstractWaterBoundarySurface"
    },
    "org.citygml4j.model.citygml.bridge.OpeningProperty": {
        "getOpening": "org.citygml4j.model.citygml.bridge.AbstractOpening",
        "isSetOpening": "boolean"
    },
    "org.citygml4j.model.citygml.cityfurniture.CityFurniture": {
        "isSetGenericApplicationPropertyOfCityFurniture": "boolean",
        "isSetLod2TerrainIntersection": "boolean",
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetFunction": "boolean",
        "isSetLod1TerrainIntersection": "boolean",
        "isSetLod4TerrainIntersection": "boolean",
        "isSetLod3TerrainIntersection": "boolean",
        "isSetLod4Geometry": "boolean",
        "isSetLod3Geometry": "boolean",
        "getGenericApplicationPropertyOfCityFurniture": "java.util.List",
        "isSetLod1ImplicitRepresentation": "boolean",
        "getLod1ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetLod1Geometry": "boolean",
        "isSetLod2Geometry": "boolean",
        "getLod3Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "getLod4Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetLod2ImplicitRepresentation": "boolean",
        "getLod2ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLod1Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetLod3ImplicitRepresentation": "boolean",
        "getFunction": "java.util.List",
        "getLod2Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetClazz": "boolean",
        "getUsage": "java.util.List",
        "getLod3ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "getLod3TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod2TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "isSetLod4ImplicitRepresentation": "boolean",
        "getLod1TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod4TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty"
    },
    "org.citygml4j.model.citygml.transportation.Square": {
        "getGenericApplicationPropertyOfSquare": "java.util.List",
        "isSetGenericApplicationPropertyOfSquare": "boolean"
    },
    "org.citygml4j.model.citygml.waterbody.WaterBody": {
        "getLod1Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty",
        "isSetFunction": "boolean",
        "isSetLod2Solid": "boolean",
        "getBoundedBySurface": "java.util.List",
        "getLod0MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getLod2Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty",
        "isSetLod1MultiCurve": "boolean",
        "getLod1MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getLod0MultiCurve": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "isSetLod3Solid": "boolean",
        "isSetGenericApplicationPropertyOfWaterBody": "boolean",
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "getFunction": "java.util.List",
        "getLod3Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty",
        "isSetClazz": "boolean",
        "getUsage": "java.util.List",
        "isSetBoundedBySurface": "boolean",
        "isSetLod1MultiSurface": "boolean",
        "isSetLod1Solid": "boolean",
        "isSetLod0MultiSurface": "boolean",
        "isSetLod4Solid": "boolean",
        "getLod1MultiCurve": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "isSetLod0MultiCurve": "boolean",
        "getGenericApplicationPropertyOfWaterBody": "java.util.List",
        "getLod4Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty"
    },
    "org.citygml4j.model.citygml.core.ImplicitGeometry": {
        "isSetTransformationMatrix": "boolean",
        "getTransformationMatrix": "org.citygml4j.model.citygml.core.TransformationMatrix4x4",
        "getMimeType": "org.citygml4j.model.gml.basicTypes.Code",
        "getRelativeGMLGeometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetReferencePoint": "boolean",
        "isSetRelativeGMLGeometry": "boolean",
        "getReferencePoint": "org.citygml4j.model.gml.geometry.primitives.PointProperty",
        "getLibraryObject": "java.lang.String",
        "isSetMimeType": "boolean",
        "isSetLibraryObject": "boolean"
    },
    "org.citygml4j.model.citygml.core.ExternalObject": {
        "getName": "java.lang.String",
        "isSetUri": "boolean",
        "isSetName": "boolean",
        "getUri": "java.lang.String"
    },
    "org.citygml4j.model.citygml.core.TransformationMatrix3x4": {
        "getMatrix": "org.citygml4j.geometry.Matrix",
        "isSetMatrix": "boolean"
    },
    "org.citygml4j.model.citygml.bridge.InteriorBridgeRoomProperty": {
        "getBridgeRoom": "org.citygml4j.model.citygml.bridge.BridgeRoom",
        "isSetBridgeRoom": "boolean"
    },
    "org.citygml4j.model.citygml.bridge.Window": {
        "isSetGenericApplicationPropertyOfWindow": "boolean",
        "getGenericApplicationPropertyOfWindow": "java.util.List"
    },
    "org.citygml4j.model.citygml.core.ExternalReference": {
        "getExternalObject": "org.citygml4j.model.citygml.core.ExternalObject",
        "isSetExternalObject": "boolean",
        "getInformationSystem": "java.lang.String",
        "isSetInformationSystem": "boolean"
    },
    "org.citygml4j.model.citygml.texturedsurface._Color": {
        "getGreen": "java.lang.Double",
        "getRed": "java.lang.Double",
        "getBlue": "java.lang.Double"
    },
    "org.citygml4j.model.citygml.relief.GridProperty": {
        "isSetRectifiedGridCoverage": "boolean",
        "getRectifiedGridCoverage": "org.citygml4j.model.gml.coverage.RectifiedGridCoverage"
    },
    "org.citygml4j.model.citygml.bridge.WallSurface": {
        "isSetGenericApplicationPropertyOfWallSurface": "boolean",
        "getGenericApplicationPropertyOfWallSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.cityobjectgroup.CityObjectGroup": {
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetGeometry": "boolean",
        "getGroupMember": "java.util.List",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "isSetGenericApplicationPropertyOfCityObjectGroup": "boolean",
        "isSetClazz": "boolean",
        "getGeometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetGroupParent": "boolean",
        "getUsage": "java.util.List",
        "getGenericApplicationPropertyOfCityObjectGroup": "java.util.List",
        "isSetGroupMember": "boolean",
        "getGroupParent": "org.citygml4j.model.citygml.cityobjectgroup.CityObjectGroupParent"
    },
    "org.citygml4j.model.citygml.building.BuildingPartProperty": {
        "getBuildingPart": "org.citygml4j.model.citygml.building.BuildingPart",
        "isSetBuildingPart": "boolean"
    },
    "org.citygml4j.model.citygml.appearance.TextureType": {"getValue": "java.lang.String"},
    "org.citygml4j.model.citygml.core.AbstractCityObject": {
        "getGeneralizesTo": "java.util.List",
        "isSetAppearance": "boolean",
        "isSetGeneralizesTo": "boolean",
        "getAppearance": "java.util.List",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetGenericApplicationPropertyOfCityObject": "boolean",
        "getRelativeToWater": "org.citygml4j.model.citygml.core.RelativeToWater",
        "isSetCreationDate": "boolean",
        "isSetExternalReference": "boolean",
        "getExternalReference": "java.util.List",
        "getRelativeToTerrain": "org.citygml4j.model.citygml.core.RelativeToTerrain",
        "getCreationDate": "java.time.ZonedDateTime",
        "isSetTerminationDate": "boolean",
        "isSetRelativeToTerrain": "boolean",
        "getSpatialRepresentation": "org.citygml4j.model.gml.feature.SpatialRepresentation",
        "getGenericAttribute": "java.util.List",
        "isSetRelativeToWater": "boolean",
        "isSetGenericAttribute": "boolean",
        "getGenericApplicationPropertyOfCityObject": "java.util.List",
        "getTerminationDate": "java.time.ZonedDateTime"
    },
    "org.citygml4j.model.citygml.transportation.AuxiliaryTrafficArea": {
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getGenericApplicationPropertyOfAuxiliaryTrafficArea": "java.util.List",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetClazz": "boolean",
        "isSetLod4MultiSurface": "boolean",
        "isSetLod3MultiSurface": "boolean",
        "isSetSurfaceMaterial": "boolean",
        "getLod3MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getUsage": "java.util.List",
        "isSetLod2MultiSurface": "boolean",
        "getSurfaceMaterial": "org.citygml4j.model.gml.basicTypes.Code",
        "getLod2MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetGenericApplicationPropertyOfAuxiliaryTrafficArea": "boolean"
    },
    "org.citygml4j.model.citygml.appearance.Color": {
        "getGreen": "java.lang.Double",
        "getRed": "java.lang.Double",
        "getBlue": "java.lang.Double"
    },
    "org.citygml4j.model.citygml.relief.BreaklineRelief": {
        "isSetBreaklines": "boolean",
        "isSetRidgeOrValleyLines": "boolean",
        "getBreaklines": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getGenericApplicationPropertyOfBreaklineRelief": "java.util.List",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetGenericApplicationPropertyOfBreaklineRelief": "boolean",
        "getRidgeOrValleyLines": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty"
    },
    "org.citygml4j.model.citygml.bridge.InteriorFurnitureProperty": {
        "isSetBridgeFurniture": "boolean",
        "getBridgeFurniture": "org.citygml4j.model.citygml.bridge.BridgeFurniture"
    },
    "org.citygml4j.model.citygml.tunnel.ClosureSurface": {
        "isSetGenericApplicationPropertyOfClosureSurface": "boolean",
        "getGenericApplicationPropertyOfClosureSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.waterbody.WaterClosureSurface": {
        "getGenericApplicationPropertyOfWaterClosureSurface": "java.util.List",
        "isSetGenericApplicationPropertyOfWaterClosureSurface": "boolean"
    },
    "org.citygml4j.model.citygml.core.AddressProperty": {
        "getAddress": "org.citygml4j.model.citygml.core.Address",
        "isSetAddress": "boolean"
    },
    "org.citygml4j.model.citygml.core.RelativeToTerrain": {"getValue": "java.lang.String"},
    "org.citygml4j.model.citygml.generics.GenericAttributeSet": {
        "getCodeSpace": "java.lang.String",
        "isSetCodeSpace": "boolean",
        "getGenericAttribute": "java.util.List",
        "isSetGenericAttribute": "boolean"
    },
    "org.citygml4j.model.citygml.appearance.TextureAssociation": {
        "getTextureParameterization": "org.citygml4j.model.citygml.appearance.AbstractTextureParameterization",
        "isSetUri": "boolean",
        "isSetTextureParameterization": "boolean",
        "getUri": "java.lang.String"
    },
    "org.citygml4j.model.citygml.building.RoofSurface": {
        "isSetGenericApplicationPropertyOfRoofSurface": "boolean",
        "getGenericApplicationPropertyOfRoofSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.cityobjectgroup.CityObjectGroupMember": {
        "getGroupRole": "java.lang.String",
        "isSetGroupRole": "boolean",
        "getCityObject": "org.citygml4j.model.citygml.core.AbstractCityObject",
        "isSetCityObject": "boolean"
    },
    "org.citygml4j.model.citygml.building.BuildingInstallationProperty": {
        "getBuildingInstallation": "org.citygml4j.model.citygml.building.BuildingInstallation",
        "isSetBuildingInstallation": "boolean"
    },
    "org.citygml4j.model.citygml.generics.StringAttribute": {
        "getValue": "java.lang.String",
        "isSetValue": "boolean"
    },
    "org.citygml4j.model.citygml.building.InteriorFurnitureProperty": {
        "isSetBuildingFurniture": "boolean",
        "getBuildingFurniture": "org.citygml4j.model.citygml.building.BuildingFurniture"
    },
    "org.citygml4j.model.citygml.appearance.ColorPlusOpacity": {
        "getOpacity": "java.lang.Double",
        "getGreen": "java.lang.Double",
        "getRed": "java.lang.Double",
        "getColor": "org.citygml4j.model.citygml.appearance.Color",
        "getBlue": "java.lang.Double"
    },
    "org.citygml4j.model.citygml.bridge.CeilingSurface": {
        "getGenericApplicationPropertyOfCeilingSurface": "java.util.List",
        "isSetGenericApplicationPropertyOfCeilingSurface": "boolean"
    },
    "org.citygml4j.model.citygml.tunnel.FloorSurface": {
        "getGenericApplicationPropertyOfFloorSurface": "java.util.List",
        "isSetGenericApplicationPropertyOfFloorSurface": "boolean"
    },
    "org.citygml4j.model.citygml.bridge.IntBridgeInstallationProperty": {
        "isSetIntBridgeInstallation": "boolean",
        "getIntBridgeInstallation": "org.citygml4j.model.citygml.bridge.IntBridgeInstallation"
    },
    "org.citygml4j.model.citygml.building.AbstractBuilding": {
        "getLod1Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty",
        "isSetConsistsOfBuildingPart": "boolean",
        "isSetOuterBuildingInstallation": "boolean",
        "isSetFunction": "boolean",
        "isSetLod1TerrainIntersection": "boolean",
        "getRoofType": "org.citygml4j.model.gml.basicTypes.Code",
        "isSetLod3TerrainIntersection": "boolean",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getLod4MultiCurve": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "isSetInteriorBuildingInstallation": "boolean",
        "isSetStoreyHeightsBelowGround": "boolean",
        "getBoundedBySurface": "java.util.List",
        "getLod3MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetYearOfDemolition": "boolean",
        "getLod2Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty",
        "getYearOfConstruction": "java.time.LocalDate",
        "getYearOfDemolition": "java.time.LocalDate",
        "getLod2MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getStoreysAboveGround": "java.lang.Integer",
        "getLod1MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetLod4MultiCurve": "boolean",
        "isSetStoreyHeightsAboveGround": "boolean",
        "isSetUsage": "boolean",
        "getStoreyHeightsBelowGround": "org.citygml4j.model.gml.basicTypes.MeasureOrNullList",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "getOuterBuildingInstallation": "java.util.List",
        "getLod3Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty",
        "isSetLod4MultiSurface": "boolean",
        "isSetLod3MultiSurface": "boolean",
        "getUsage": "java.util.List",
        "getInteriorBuildingInstallation": "java.util.List",
        "isSetLod1MultiSurface": "boolean",
        "isSetLod1Solid": "boolean",
        "getMeasuredHeight": "org.citygml4j.model.gml.measures.Length",
        "isSetLod2MultiSurface": "boolean",
        "isSetLod4Solid": "boolean",
        "getConsistsOfBuildingPart": "java.util.List",
        "isSetLod3MultiCurve": "boolean",
        "getStoreyHeightsAboveGround": "org.citygml4j.model.gml.basicTypes.MeasureOrNullList",
        "isSetAddress": "boolean",
        "isSetLod2TerrainIntersection": "boolean",
        "isSetLod4TerrainIntersection": "boolean",
        "getInteriorRoom": "java.util.List",
        "isSetLod2Solid": "boolean",
        "isSetStoreysBelowGround": "boolean",
        "getGenericApplicationPropertyOfAbstractBuilding": "java.util.List",
        "isSetMeasuredHeight": "boolean",
        "getLod2MultiCurve": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "isSetInteriorRoom": "boolean",
        "getLod0FootPrint": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetGenericApplicationPropertyOfAbstractBuilding": "boolean",
        "getAddress": "java.util.List",
        "isSetLod0FootPrint": "boolean",
        "isSetLod3Solid": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "isSetStoreysAboveGround": "boolean",
        "isSetYearOfConstruction": "boolean",
        "isSetLod0RoofEdge": "boolean",
        "getFunction": "java.util.List",
        "isSetClazz": "boolean",
        "getLod3MultiCurve": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "isSetLod2MultiCurve": "boolean",
        "isSetBoundedBySurface": "boolean",
        "getLod3TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod2TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getStoreysBelowGround": "java.lang.Integer",
        "isSetRoofType": "boolean",
        "getLod0RoofEdge": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getLod1TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod4TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod4Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty"
    },
    "org.citygml4j.model.citygml.building.Building": {
        "getGenericApplicationPropertyOfBuilding": "java.util.List",
        "isSetGenericApplicationPropertyOfBuilding": "boolean"
    },
    "org.citygml4j.model.citygml.vegetation.AbstractVegetationObject": {
        "getGenericApplicationPropertyOfVegetationObject": "java.util.List",
        "isSetGenericApplicationPropertyOfVegetationObject": "boolean"
    },
    "org.citygml4j.model.citygml.relief.TINRelief": {
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetGenericApplicationPropertyOfTinRelief": "boolean",
        "getGenericApplicationPropertyOfTinRelief": "java.util.List",
        "getTin": "org.citygml4j.model.citygml.relief.TinProperty",
        "isSetTin": "boolean"
    },
    "org.citygml4j.model.citygml.transportation.TransportationComplex": {
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetClazz": "boolean",
        "isSetLod4MultiSurface": "boolean",
        "getGenericApplicationPropertyOfTransportationComplex": "java.util.List",
        "isSetLod3MultiSurface": "boolean",
        "getLod3MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetLod0Network": "boolean",
        "isSetTrafficArea": "boolean",
        "getUsage": "java.util.List",
        "isSetLod1MultiSurface": "boolean",
        "isSetAuxiliaryTrafficArea": "boolean",
        "isSetLod2MultiSurface": "boolean",
        "getLod2MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getAuxiliaryTrafficArea": "java.util.List",
        "getLod1MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getTrafficArea": "java.util.List",
        "isSetGenericApplicationPropertyOfTransportationComplex": "boolean",
        "getLod0Network": "java.util.List"
    },
    "org.citygml4j.model.citygml.bridge.AbstractBoundarySurface": {
        "getOpening": "java.util.List",
        "isSetGenericApplicationPropertyOfBoundarySurface": "boolean",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetLod2MultiSurface": "boolean",
        "getLod2MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getGenericApplicationPropertyOfBoundarySurface": "java.util.List",
        "isSetLod4MultiSurface": "boolean",
        "isSetLod3MultiSurface": "boolean",
        "getLod3MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetOpening": "boolean"
    },
    "org.citygml4j.model.citygml.bridge.Door": {
        "getAddress": "java.util.List",
        "isSetGenericApplicationPropertyOfDoor": "boolean",
        "getGenericApplicationPropertyOfDoor": "java.util.List",
        "isSetAddress": "boolean"
    },
    "org.citygml4j.model.citygml.tunnel.TunnelFurniture": {
        "isSetGenericApplicationPropertyOfTunnelFurniture": "boolean",
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "getGenericApplicationPropertyOfTunnelFurniture": "java.util.List",
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "isSetLod4Geometry": "boolean",
        "isSetClazz": "boolean",
        "getUsage": "java.util.List",
        "isSetLod4ImplicitRepresentation": "boolean",
        "getLod4Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty"
    },
    "org.citygml4j.model.citygml.generics.MeasureAttribute": {
        "getValue": "org.citygml4j.model.gml.basicTypes.Measure",
        "isSetValue": "boolean"
    },
    "org.citygml4j.model.citygml.bridge.BoundarySurfaceProperty": {
        "isSetBoundarySurface": "boolean",
        "getBoundarySurface": "org.citygml4j.model.citygml.bridge.AbstractBoundarySurface"
    },
    "org.citygml4j.model.citygml.tunnel.HollowSpace": {
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetClazz": "boolean",
        "isSetLod4MultiSurface": "boolean",
        "getGenericApplicationPropertyOfHollowSpace": "java.util.List",
        "getInteriorFurniture": "java.util.List",
        "getHollowSpaceInstallation": "java.util.List",
        "getBoundedBySurface": "java.util.List",
        "getUsage": "java.util.List",
        "isSetBoundedBySurface": "boolean",
        "isSetGenericApplicationPropertyOfHollowSpace": "boolean",
        "isSetLod4Solid": "boolean",
        "isSetInteriorFurniture": "boolean",
        "isSetHollowSpaceInstallation": "boolean",
        "getLod4Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty"
    },
    "org.citygml4j.model.citygml.waterbody.WaterGroundSurface": {
        "getGenericApplicationPropertyOfWaterGroundSurface": "java.util.List",
        "isSetGenericApplicationPropertyOfWaterGroundSurface": "boolean"
    },
    "org.citygml4j.model.citygml.appearance.AbstractTexture": {
        "getWrapMode": "org.citygml4j.model.citygml.appearance.WrapMode",
        "isSetBorderColor": "boolean",
        "isSetImageURI": "boolean",
        "getMimeType": "org.citygml4j.model.gml.basicTypes.Code",
        "getTextureType": "org.citygml4j.model.citygml.appearance.TextureType",
        "getBorderColor": "org.citygml4j.model.citygml.appearance.ColorPlusOpacity",
        "getImageURI": "java.lang.String",
        "isSetTextureType": "boolean",
        "isSetMimeType": "boolean",
        "isSetWrapMode": "boolean",
        "getGenericApplicationPropertyOfTexture": "java.util.List",
        "isSetGenericApplicationPropertyOfTexture": "boolean"
    },
    "org.citygml4j.model.citygml.appearance.ParameterizedTexture": {
        "isSetTarget": "boolean",
        "getGenericApplicationPropertyOfParameterizedTexture": "java.util.List",
        "getTarget": "java.util.List",
        "isSetGenericApplicationPropertyOfParameterizedTexture": "boolean"
    },
    "org.citygml4j.model.citygml.core.RelativeToWater": {"getValue": "java.lang.String"},
    "org.citygml4j.model.citygml.bridge.OuterFloorSurface": {
        "isSetGenericApplicationPropertyOfOuterFloorSurface": "boolean",
        "getGenericApplicationPropertyOfOuterFloorSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.transportation.Railway": {
        "getGenericApplicationPropertyOfRailway": "java.util.List",
        "isSetGenericApplicationPropertyOfRailway": "boolean"
    },
    "org.citygml4j.model.citygml.ade.ADEComponent": {"getADEClass": "org.citygml4j.model.citygml.ade.ADEClass"},
    "org.citygml4j.model.citygml.tunnel.TunnelInstallation": {
        "getLod2ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetGenericApplicationPropertyOfTunnelInstallation": "boolean",
        "isSetLod3ImplicitRepresentation": "boolean",
        "getGenericApplicationPropertyOfTunnelInstallation": "java.util.List",
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "getLod2Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetLod4Geometry": "boolean",
        "isSetClazz": "boolean",
        "isSetLod3Geometry": "boolean",
        "getBoundedBySurface": "java.util.List",
        "getUsage": "java.util.List",
        "isSetBoundedBySurface": "boolean",
        "getLod3ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetLod2Geometry": "boolean",
        "isSetLod4ImplicitRepresentation": "boolean",
        "getLod3Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "getLod4Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetLod2ImplicitRepresentation": "boolean"
    },
    "org.citygml4j.model.citygml.appearance.AppearanceProperty": {
        "isSetAppearance": "boolean",
        "getAppearance": "org.citygml4j.model.citygml.appearance.Appearance"
    },
    "org.citygml4j.model.citygml.core.Address": {
        "getGenericApplicationPropertyOfAddress": "java.util.List",
        "isSetMultiPoint": "boolean",
        "isSetXalAddress": "boolean",
        "getSpatialRepresentation": "org.citygml4j.model.gml.feature.SpatialRepresentation",
        "getMultiPoint": "org.citygml4j.model.gml.geometry.aggregates.MultiPointProperty",
        "isSetGenericApplicationPropertyOfAddress": "boolean",
        "getXalAddress": "org.citygml4j.model.citygml.core.XalAddressProperty"
    },
    "org.citygml4j.model.citygml.appearance.X3DMaterial": {
        "getEmissiveColor": "org.citygml4j.model.citygml.appearance.Color",
        "isSetGenericApplicationPropertyOfX3DMaterial": "boolean",
        "isSetTransparency": "boolean",
        "isSetEmissiveColor": "boolean",
        "isSetTarget": "boolean",
        "getDiffuseColor": "org.citygml4j.model.citygml.appearance.Color",
        "getGenericApplicationPropertyOfX3DMaterial": "java.util.List",
        "isSetSpecularColor": "boolean",
        "getSpecularColor": "org.citygml4j.model.citygml.appearance.Color",
        "getTransparency": "java.lang.Double",
        "getTarget": "java.util.List",
        "getShininess": "java.lang.Double",
        "isSetAmbientIntensity": "boolean",
        "isSetIsSmooth": "boolean",
        "getIsSmooth": "java.lang.Boolean",
        "getAmbientIntensity": "java.lang.Double",
        "isSetDiffuseColor": "boolean",
        "isSetShininess": "boolean"
    },
    "org.citygml4j.model.citygml.building.BuildingInstallation": {
        "getLod2ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetLod3ImplicitRepresentation": "boolean",
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "getLod2Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetLod4Geometry": "boolean",
        "isSetClazz": "boolean",
        "getGenericApplicationPropertyOfBuildingInstallation": "java.util.List",
        "isSetGenericApplicationPropertyOfBuildingInstallation": "boolean",
        "isSetLod3Geometry": "boolean",
        "getBoundedBySurface": "java.util.List",
        "getUsage": "java.util.List",
        "isSetBoundedBySurface": "boolean",
        "getLod3ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetLod2Geometry": "boolean",
        "isSetLod4ImplicitRepresentation": "boolean",
        "getLod3Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "getLod4Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetLod2ImplicitRepresentation": "boolean"
    },
    "org.citygml4j.model.citygml.waterbody.WaterSurface": {
        "getWaterLevel": "org.citygml4j.model.gml.basicTypes.Code",
        "getGenericApplicationPropertyOfWaterSurface": "java.util.List",
        "isSetGenericApplicationPropertyOfWaterSurface": "boolean",
        "isSetWaterLevel": "boolean"
    },
    "org.citygml4j.model.citygml.tunnel.IntTunnelInstallationProperty": {
        "getIntTunnelInstallation": "org.citygml4j.model.citygml.tunnel.IntTunnelInstallation",
        "isSetIntTunnelInstallation": "boolean"
    },
    "org.citygml4j.model.citygml.core.TransformationMatrix2x2": {
        "getMatrix": "org.citygml4j.geometry.Matrix",
        "isSetMatrix": "boolean"
    },
    "org.citygml4j.model.citygml.building.AbstractBoundarySurface": {
        "getOpening": "java.util.List",
        "isSetGenericApplicationPropertyOfBoundarySurface": "boolean",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetLod2MultiSurface": "boolean",
        "getLod2MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getGenericApplicationPropertyOfBoundarySurface": "java.util.List",
        "isSetLod4MultiSurface": "boolean",
        "isSetLod3MultiSurface": "boolean",
        "getLod3MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetOpening": "boolean"
    },
    "org.citygml4j.model.citygml.building.Room": {
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetClazz": "boolean",
        "isSetLod4MultiSurface": "boolean",
        "getInteriorFurniture": "java.util.List",
        "getBoundedBySurface": "java.util.List",
        "isSetGenericApplicationPropertyOfRoom": "boolean",
        "getUsage": "java.util.List",
        "isSetBoundedBySurface": "boolean",
        "isSetRoomInstallation": "boolean",
        "isSetLod4Solid": "boolean",
        "getRoomInstallation": "java.util.List",
        "isSetInteriorFurniture": "boolean",
        "getGenericApplicationPropertyOfRoom": "java.util.List",
        "getLod4Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty"
    },
    "org.citygml4j.model.citygml.tunnel.IntTunnelInstallation": {
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getGenericApplicationPropertyOfIntTunnelInstallation": "java.util.List",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "isSetLod4Geometry": "boolean",
        "isSetClazz": "boolean",
        "getBoundedBySurface": "java.util.List",
        "getUsage": "java.util.List",
        "isSetBoundedBySurface": "boolean",
        "isSetLod4ImplicitRepresentation": "boolean",
        "isSetGenericApplicationPropertyOfIntTunnelInstallation": "boolean",
        "getLod4Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty"
    },
    "org.citygml4j.model.citygml.tunnel.AbstractBoundarySurface": {
        "getOpening": "java.util.List",
        "isSetGenericApplicationPropertyOfBoundarySurface": "boolean",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetLod2MultiSurface": "boolean",
        "getLod2MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getGenericApplicationPropertyOfBoundarySurface": "java.util.List",
        "isSetLod4MultiSurface": "boolean",
        "isSetLod3MultiSurface": "boolean",
        "getLod3MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetOpening": "boolean"
    },
    "org.citygml4j.model.citygml.appearance.WorldToTexture": {
        "isSetAxisLabels": "boolean",
        "getSrsName": "java.lang.String",
        "getAxisLabels": "java.util.List",
        "getSrsDimension": "java.lang.Integer",
        "isSetSrsDimension": "boolean",
        "isSetSrsName": "boolean",
        "isSetUomLabels": "boolean",
        "getUomLabels": "java.util.List"
    },
    "org.citygml4j.model.citygml.building.BuildingPart": {
        "isSetGenericApplicationPropertyOfBuildingPart": "boolean",
        "getGenericApplicationPropertyOfBuildingPart": "java.util.List"
    },
    "org.citygml4j.model.citygml.building.IntBuildingInstallationProperty": {
        "isSetIntBuildingInstallation": "boolean",
        "getIntBuildingInstallation": "org.citygml4j.model.citygml.building.IntBuildingInstallation"
    },
    "org.citygml4j.model.citygml.bridge.BridgeConstructionElement": {
        "isSetLod2TerrainIntersection": "boolean",
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetFunction": "boolean",
        "isSetLod1TerrainIntersection": "boolean",
        "isSetLod4TerrainIntersection": "boolean",
        "isSetLod3TerrainIntersection": "boolean",
        "isSetLod4Geometry": "boolean",
        "isSetLod3Geometry": "boolean",
        "getBoundedBySurface": "java.util.List",
        "isSetLod1ImplicitRepresentation": "boolean",
        "getLod1ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetGenericApplicationPropertyOfBridgeConstructionElement": "boolean",
        "getGenericApplicationPropertyOfBridgeConstructionElement": "java.util.List",
        "isSetLod1Geometry": "boolean",
        "isSetLod2Geometry": "boolean",
        "getLod3Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "getLod4Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetLod2ImplicitRepresentation": "boolean",
        "getLod2ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLod1Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetLod3ImplicitRepresentation": "boolean",
        "getFunction": "java.util.List",
        "getLod2Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetClazz": "boolean",
        "getUsage": "java.util.List",
        "isSetBoundedBySurface": "boolean",
        "getLod3ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "getLod3TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod2TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "isSetLod4ImplicitRepresentation": "boolean",
        "getLod1TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod4TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty"
    },
    "org.citygml4j.model.citygml.building.InteriorRoomProperty": {
        "isSetRoom": "boolean",
        "getRoom": "org.citygml4j.model.citygml.building.Room"
    },
    "org.citygml4j.model.citygml.core.CityModel": {
        "getGenericApplicationPropertyOfCityModel": "java.util.List",
        "getCityObjectMember": "java.util.List",
        "isSetAppearanceMember": "boolean",
        "getAppearanceMember": "java.util.List",
        "isSetGenericApplicationPropertyOfCityModel": "boolean",
        "isSetCityObjectMember": "boolean"
    },
    "org.citygml4j.model.citygml.landuse.LandUse": {
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "getGenericApplicationPropertyOfLandUse": "java.util.List",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetClazz": "boolean",
        "isSetLod4MultiSurface": "boolean",
        "isSetLod3MultiSurface": "boolean",
        "getLod3MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getUsage": "java.util.List",
        "getLod0MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetLod1MultiSurface": "boolean",
        "isSetLod0MultiSurface": "boolean",
        "isSetLod2MultiSurface": "boolean",
        "getLod2MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getLod1MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetGenericApplicationPropertyOfLandUse": "boolean"
    },
    "org.citygml4j.model.citygml.appearance.AbstractSurfaceData": {
        "getIsFront": "java.lang.Boolean",
        "isSetIsFront": "boolean",
        "getGenericApplicationPropertyOfSurfaceData": "java.util.List",
        "isSetGenericApplicationPropertyOfSurfaceData": "boolean"
    },
    "org.citygml4j.model.citygml.transportation.AuxiliaryTrafficAreaProperty": {
        "isSetAuxiliaryTrafficArea": "boolean",
        "getAuxiliaryTrafficArea": "org.citygml4j.model.citygml.transportation.AuxiliaryTrafficArea"
    },
    "org.citygml4j.model.citygml.bridge.AbstractOpening": {
        "getLod3ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetGenericApplicationPropertyOfOpening": "boolean",
        "isSetLod3ImplicitRepresentation": "boolean",
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetLod4ImplicitRepresentation": "boolean",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetLod4MultiSurface": "boolean",
        "getGenericApplicationPropertyOfOpening": "java.util.List",
        "isSetLod3MultiSurface": "boolean",
        "getLod3MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty"
    },
    "org.citygml4j.model.citygml.building.GroundSurface": {
        "isSetGenericApplicationPropertyOfGroundSurface": "boolean",
        "getGenericApplicationPropertyOfGroundSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.building.Door": {
        "getAddress": "java.util.List",
        "isSetGenericApplicationPropertyOfDoor": "boolean",
        "getGenericApplicationPropertyOfDoor": "java.util.List",
        "isSetAddress": "boolean"
    },
    "org.citygml4j.model.citygml.bridge.InteriorWallSurface": {
        "getGenericApplicationPropertyOfInteriorWallSurface": "java.util.List",
        "isSetGenericApplicationPropertyOfInteriorWallSurface": "boolean"
    },
    "org.citygml4j.model.citygml.transportation.Track": {
        "isSetGenericApplicationPropertyOfTrack": "boolean",
        "getGenericApplicationPropertyOfTrack": "java.util.List"
    },
    "org.citygml4j.model.citygml.relief.MassPointRelief": {
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "getGenericApplicationPropertyOfMassPointRelief": "java.util.List",
        "getReliefPoints": "org.citygml4j.model.gml.geometry.aggregates.MultiPointProperty",
        "isSetReliefPoints": "boolean",
        "isSetGenericApplicationPropertyOfMassPointRelief": "boolean"
    },
    "org.citygml4j.model.citygml.appearance.AppearanceMember": {},
    "org.citygml4j.model.citygml.building.FloorSurface": {
        "getGenericApplicationPropertyOfFloorSurface": "java.util.List",
        "isSetGenericApplicationPropertyOfFloorSurface": "boolean"
    },
    "org.citygml4j.model.citygml.tunnel.BoundarySurfaceProperty": {
        "isSetBoundarySurface": "boolean",
        "getBoundarySurface": "org.citygml4j.model.citygml.tunnel.AbstractBoundarySurface"
    },
    "org.citygml4j.model.citygml.building.BoundarySurfaceProperty": {
        "isSetBoundarySurface": "boolean",
        "getBoundarySurface": "org.citygml4j.model.citygml.building.AbstractBoundarySurface"
    },
    "org.citygml4j.model.citygml.generics.DoubleAttribute": {
        "getValue": "java.lang.Double",
        "isSetValue": "boolean"
    },
    "org.citygml4j.model.citygml.tunnel.Tunnel": {
        "getGenericApplicationPropertyOfTunnel": "java.util.List",
        "isSetGenericApplicationPropertyOfTunnel": "boolean"
    },
    "org.citygml4j.model.citygml.bridge.BridgeRoom": {
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getGenericApplicationPropertyOfBridgeRoom": "java.util.List",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetClazz": "boolean",
        "isSetGenericApplicationPropertyOfBridgeRoom": "boolean",
        "isSetLod4MultiSurface": "boolean",
        "getInteriorFurniture": "java.util.List",
        "getBoundedBySurface": "java.util.List",
        "getUsage": "java.util.List",
        "isSetBoundedBySurface": "boolean",
        "isSetBridgeRoomInstallation": "boolean",
        "isSetLod4Solid": "boolean",
        "isSetInteriorFurniture": "boolean",
        "getLod4Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty",
        "getBridgeRoomInstallation": "java.util.List"
    },
    "org.citygml4j.model.citygml.texturedsurface._AbstractAppearance": {},
    "org.citygml4j.model.citygml.appearance.TextureCoordinates": {
        "getValue": "java.util.List",
        "getRing": "java.lang.String",
        "isSetValue": "boolean",
        "isSetRing": "boolean"
    },
    "org.citygml4j.model.citygml.bridge.BridgeInstallation": {
        "getLod2ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "isSetLod3ImplicitRepresentation": "boolean",
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "getLod2Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetLod4Geometry": "boolean",
        "isSetClazz": "boolean",
        "isSetLod3Geometry": "boolean",
        "getGenericApplicationPropertyOfBridgeInstallation": "java.util.List",
        "getBoundedBySurface": "java.util.List",
        "getUsage": "java.util.List",
        "isSetBoundedBySurface": "boolean",
        "getLod3ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetLod2Geometry": "boolean",
        "isSetLod4ImplicitRepresentation": "boolean",
        "getLod3Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetGenericApplicationPropertyOfBridgeInstallation": "boolean",
        "getLod4Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetLod2ImplicitRepresentation": "boolean"
    },
    "org.citygml4j.model.citygml.core.CityObjectMember": {
        "getCityObject": "org.citygml4j.model.citygml.core.AbstractCityObject",
        "isSetCityObject": "boolean"
    },
    "org.citygml4j.model.citygml.tunnel.TunnelPart": {
        "isSetGenericApplicationPropertyOfTunnelPart": "boolean",
        "getGenericApplicationPropertyOfTunnelPart": "java.util.List"
    },
    "org.citygml4j.model.citygml.tunnel.RoofSurface": {
        "isSetGenericApplicationPropertyOfRoofSurface": "boolean",
        "getGenericApplicationPropertyOfRoofSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.tunnel.OuterCeilingSurface": {
        "isSetGenericApplicationPropertyOfOuterCeilingSurface": "boolean",
        "getGenericApplicationPropertyOfOuterCeilingSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.generics.UriAttribute": {
        "getValue": "java.lang.String",
        "isSetValue": "boolean"
    },
    "org.citygml4j.model.citygml.tunnel.InteriorFurnitureProperty": {
        "isSetTunnelFurniture": "boolean",
        "getTunnelFurniture": "org.citygml4j.model.citygml.tunnel.TunnelFurniture"
    },
    "org.citygml4j.model.citygml.tunnel.Window": {
        "isSetGenericApplicationPropertyOfWindow": "boolean",
        "getGenericApplicationPropertyOfWindow": "java.util.List"
    },
    "org.citygml4j.model.citygml.core.XalAddressProperty": {
        "isSetAddressDetails": "boolean",
        "getAddressDetails": "org.citygml4j.model.xal.AddressDetails"
    },
    "org.citygml4j.model.citygml.appearance.AbstractTextureParameterization": {
        "isSetModule": "boolean",
        "getGenericADEElement": "java.util.List",
        "isSetGenericApplicationPropertyOfTextureParameterization": "boolean",
        "isSetGenericADEComponent": "boolean",
        "getGenericApplicationPropertyOfTextureParameterization": "java.util.List"
    },
    "org.citygml4j.model.citygml.tunnel.InteriorWallSurface": {
        "getGenericApplicationPropertyOfInteriorWallSurface": "java.util.List",
        "isSetGenericApplicationPropertyOfInteriorWallSurface": "boolean"
    },
    "org.citygml4j.model.citygml.tunnel.OpeningProperty": {
        "getOpening": "org.citygml4j.model.citygml.tunnel.AbstractOpening",
        "isSetOpening": "boolean"
    },
    "org.citygml4j.model.citygml.core.GeneralizationRelation": {
        "getCityObject": "org.citygml4j.model.citygml.core.AbstractCityObject",
        "isSetCityObject": "boolean"
    },
    "org.citygml4j.model.citygml.bridge.FloorSurface": {
        "getGenericApplicationPropertyOfFloorSurface": "java.util.List",
        "isSetGenericApplicationPropertyOfFloorSurface": "boolean"
    },
    "org.citygml4j.model.citygml.waterbody.AbstractWaterObject": {
        "isSetGenericApplicationPropertyOfWaterObject": "boolean",
        "getGenericApplicationPropertyOfWaterObject": "java.util.List"
    },
    "org.citygml4j.model.citygml.generics.DateAttribute": {
        "getValue": "java.time.LocalDate",
        "isSetValue": "boolean"
    },
    "org.citygml4j.model.citygml.tunnel.CeilingSurface": {
        "getGenericApplicationPropertyOfCeilingSurface": "java.util.List",
        "isSetGenericApplicationPropertyOfCeilingSurface": "boolean"
    },
    "org.citygml4j.model.citygml.building.OuterFloorSurface": {
        "isSetGenericApplicationPropertyOfOuterFloorSurface": "boolean",
        "getGenericApplicationPropertyOfOuterFloorSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.building.OpeningProperty": {
        "getOpening": "org.citygml4j.model.citygml.building.AbstractOpening",
        "isSetOpening": "boolean"
    },
    "org.citygml4j.model.citygml.texturedsurface._TexturedSurface": {
        "isSetAppearance": "boolean",
        "getAppearance": "java.util.List"
    },
    "org.citygml4j.model.citygml.appearance.Appearance": {
        "isSetSurfaceDataMember": "boolean",
        "getTheme": "java.lang.String",
        "getGenericApplicationPropertyOfAppearance": "java.util.List",
        "isSetGenericApplicationPropertyOfAppearance": "boolean",
        "isSetTheme": "boolean",
        "getSurfaceDataMember": "java.util.List"
    },
    "org.citygml4j.model.citygml.texturedsurface._SimpleTexture": {
        "isSetTextureCoordinates": "boolean",
        "getRepeat": "java.lang.Boolean",
        "getTextureMap": "java.lang.String",
        "isSetRepeat": "boolean",
        "getTextureCoordinates": "java.util.List",
        "getTextureType": "org.citygml4j.model.citygml.texturedsurface._TextureType",
        "isSetTextureType": "boolean",
        "isSetTextureMap": "boolean"
    },
    "org.citygml4j.model.citygml.appearance.SurfaceDataProperty": {
        "getSurfaceData": "org.citygml4j.model.citygml.appearance.AbstractSurfaceData",
        "isSetSurfaceData": "boolean"
    },
    "org.citygml4j.model.citygml.appearance.WrapMode": {"getValue": "java.lang.String"},
    "org.citygml4j.model.citygml.appearance.GeoreferencedTexture": {
        "isSetTarget": "boolean",
        "isSetOrientation": "boolean",
        "getTarget": "java.util.List",
        "getOrientation": "org.citygml4j.model.citygml.core.TransformationMatrix2x2",
        "getGenericApplicationPropertyOfGeoreferencedTexture": "java.util.List",
        "isSetGenericApplicationPropertyOfGeoreferencedTexture": "boolean",
        "isSetReferencePoint": "boolean",
        "getReferencePoint": "org.citygml4j.model.gml.geometry.primitives.PointProperty",
        "getPreferWorldFile": "java.lang.Boolean",
        "isSetPreferWorldFile": "boolean"
    },
    "org.citygml4j.model.citygml.bridge.IntBridgeInstallation": {
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "isSetLod4Geometry": "boolean",
        "isSetClazz": "boolean",
        "getBoundedBySurface": "java.util.List",
        "getUsage": "java.util.List",
        "isSetBoundedBySurface": "boolean",
        "isSetLod4ImplicitRepresentation": "boolean",
        "getGenericApplicationPropertyOfIntBridgeInstallation": "java.util.List",
        "getLod4Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty",
        "isSetGenericApplicationPropertyOfIntBridgeInstallation": "boolean"
    },
    "org.citygml4j.model.citygml.bridge.ClosureSurface": {
        "isSetGenericApplicationPropertyOfClosureSurface": "boolean",
        "getGenericApplicationPropertyOfClosureSurface": "java.util.List"
    },
    "org.citygml4j.model.citygml.building.IntBuildingInstallation": {
        "isSetUsage": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "getLod4ImplicitRepresentation": "org.citygml4j.model.citygml.core.ImplicitRepresentationProperty",
        "isSetFunction": "boolean",
        "getFunction": "java.util.List",
        "isSetLod4Geometry": "boolean",
        "getGenericApplicationPropertyOfIntBuildingInstallation": "java.util.List",
        "isSetClazz": "boolean",
        "getBoundedBySurface": "java.util.List",
        "isSetGenericApplicationPropertyOfIntBuildingInstallation": "boolean",
        "getUsage": "java.util.List",
        "isSetBoundedBySurface": "boolean",
        "isSetLod4ImplicitRepresentation": "boolean",
        "getLod4Geometry": "org.citygml4j.model.gml.geometry.GeometryProperty"
    },
    "org.citygml4j.model.citygml.tunnel.AbstractTunnel": {
        "getLod1Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty",
        "isSetInteriorHollowSpace": "boolean",
        "isSetFunction": "boolean",
        "isSetLod1TerrainIntersection": "boolean",
        "isSetLod3TerrainIntersection": "boolean",
        "getLod4MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getLod4MultiCurve": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getBoundedBySurface": "java.util.List",
        "getLod3MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetYearOfDemolition": "boolean",
        "getLod2Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty",
        "getYearOfConstruction": "java.time.LocalDate",
        "getYearOfDemolition": "java.time.LocalDate",
        "getLod2MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "getLod1MultiSurface": "org.citygml4j.model.gml.geometry.aggregates.MultiSurfaceProperty",
        "isSetLod4MultiCurve": "boolean",
        "isSetUsage": "boolean",
        "getLodRepresentation": "org.citygml4j.model.citygml.core.LodRepresentation",
        "getGenericApplicationPropertyOfAbstractTunnel": "java.util.List",
        "getLod3Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty",
        "isSetLod4MultiSurface": "boolean",
        "getInteriorTunnelInstallation": "java.util.List",
        "isSetLod3MultiSurface": "boolean",
        "getUsage": "java.util.List",
        "isSetLod1MultiSurface": "boolean",
        "isSetLod1Solid": "boolean",
        "isSetLod2MultiSurface": "boolean",
        "isSetLod4Solid": "boolean",
        "isSetLod3MultiCurve": "boolean",
        "isSetConsistsOfTunnelPart": "boolean",
        "getInteriorHollowSpace": "java.util.List",
        "isSetLod2TerrainIntersection": "boolean",
        "isSetLod4TerrainIntersection": "boolean",
        "isSetLod2Solid": "boolean",
        "getConsistsOfTunnelPart": "java.util.List",
        "getLod2MultiCurve": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "isSetLod3Solid": "boolean",
        "getClazz": "org.citygml4j.model.gml.basicTypes.Code",
        "isSetGenericApplicationPropertyOfAbstractTunnel": "boolean",
        "isSetYearOfConstruction": "boolean",
        "getFunction": "java.util.List",
        "isSetClazz": "boolean",
        "getLod3MultiCurve": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "isSetLod2MultiCurve": "boolean",
        "isSetOuterTunnelInstallation": "boolean",
        "isSetBoundedBySurface": "boolean",
        "getLod3TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod2TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getOuterTunnelInstallation": "java.util.List",
        "isSetInteriorTunnelInstallation": "boolean",
        "getLod1TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod4TerrainIntersection": "org.citygml4j.model.gml.geometry.aggregates.MultiCurveProperty",
        "getLod4Solid": "org.citygml4j.model.gml.geometry.primitives.SolidProperty"
    }
}